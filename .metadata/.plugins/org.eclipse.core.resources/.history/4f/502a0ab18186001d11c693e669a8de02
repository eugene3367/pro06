package com.shop2.myapp.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.shop2.myapp.dto.UserDTO;
import com.shop2.myapp.service.UserService;
import com.shop2.myapp.util.AES256;

@Controller
@RequestMapping("/user/")
public class UserController {
	private final Logger log = LoggerFactory.getLogger(this.getClass());

	@Autowired
	UserService userService;
	
	@Autowired
	HttpSession session;
	
	//아이디 중복 체크
	@GetMapping("idCheck.do")
	@ResponseBody
	public boolean idCheck(@RequestParam("id") String id) throws Exception {
		UserDTO user = userService.getUser(id);
		if(user==null) {
			return true;
		} else {
			return false;	
		}
	}
	
	@GetMapping("userList.do")
	@ResponseBody
	public List<UserDTO> userList(Model model) throws Exception {
		List<UserDTO> userList = userService.userList();
		return userList;
	}
	
	//회원 가입 - 약관 동의 페이지 로딩
	@GetMapping("agree")
	public String getAgree(Model model) throws Exception {
		return "user/agree";
	}	
	
	@GetMapping("getUser.do")
	@ResponseBody
	public UserDTO getUser(@RequestParam("id") String id, Model model) throws Exception {
		UserDTO user = userService.getUser(id);
		return user;
	}
	
	@GetMapping("login")
	public String userLogin(Model model) throws Exception {
		return "user/login";
	}		
	
	//로그인 	- 컨트롤러에서 세션 처리
	@RequestMapping(value="signin.do", method = RequestMethod.POST)
	public String memberSignin(@RequestParam String id, @RequestParam String pw, HttpServletRequest req, RedirectAttributes rttr) throws Exception {
		session.invalidate();
		UserDTO mdto = new UserDTO();
		mdto.setPw(pw);
		mdto.setId(id);
		UserDTO login = userService.getLogin(mdto);
		boolean loginSuccess = pwdEncoder.matches(mdto.getPw(), login.getPw());
		if(loginSuccess && login!=null) {
			session.setAttribute("member", login);
			session.setAttribute("sid", id);
			return "redirect:/";
		} else {
			return "redirect:loginForm.do";
		}
	} 
	
	//회원 가입 - 회원가입폼 페이지 로딩
	@GetMapping("join.do")
	public String getJoin(Model model) throws Exception {
		return "user/userAdd";
	}
	
	@PostMapping("addUser.do")
	public String addUser(@ModelAttribute("user") UserDTO user, Model model) throws Exception {
		AES256 aes256 = new AES256();
		user.setPw(aes256.encrypt(user.getPw()));
		userService.addUser(user);
		return "index";
	}

	@GetMapping("logout.do")
	public String logoutGET(HttpServletRequest request) {
	    HttpSession session = request.getSession();
	    session.invalidate();
		return "redirect:/";
	}
}
